"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 0.1)
mkt <- 0.6 * comp + rnorm(N, sd = 0.1)
visits <- 0.5 * mkt + rnorm(N, sd = 0.1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 0.1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ mkt, data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point() + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 0.1)
comp <- rnorm(N, sd = 0.1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 0.1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data %>% mutate(DGP = "obs"), sim_data2 %>% mutate(DGP = "do")) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 0.01)
mkt <- 0.6 * comp + rnorm(N, sd = 0.01)
visits <- 0.5 * mkt + rnorm(N, sd = 0.01)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 0.01)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point() + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 0.01)
comp <- rnorm(N, sd = 0.01)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 0.01)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data %>% mutate(DGP = "obs"), sim_data2 %>% mutate(DGP = "do")) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 0.1)
mkt <- 0.6 * comp + rnorm(N, sd = 0.1)
visits <- 0.5 * mkt + rnorm(N, sd = 0.1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 0.1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point() + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 0.1)
comp <- rnorm(N, sd = 0.1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 0.1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data %>% mutate(DGP = "obs"), sim_data2 %>% mutate(DGP = "do")) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 1)
mkt <- 0.6 * comp + rnorm(N, sd = 1)
visits <- 0.5 * mkt + rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point() + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 1)
comp <- rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data %>% mutate(DGP = "obs"), sim_data2 %>% mutate(DGP = "do")) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 1)
comp <- rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data %>% mutate(DGP = "obs"), sim_data2 %>% mutate(DGP = "do")) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% arrange(desc(DGP)) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% arrange(-DGP) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 1)
mkt <- 0.6 * comp + rnorm(N, sd = 1)
visits <- 0.5 * mkt + rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point() + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 1)
comp <- rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 1)
mkt <- 0.6 * comp + rnorm(N, sd = 1)
visits <- 0.5 * mkt + rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point() + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 1)
comp <- rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.2) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.2) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + theme(text = element_text(size = 20))
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.2) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
model <- lm(sales ~ comp, data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
model
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.2) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
model
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 1)
mkt <- 0.6 * comp + rnorm(N, sd = 1)
visits <- 0.5 * mkt + rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.2) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 1)
comp <- rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.1) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.3) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.05) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
model
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(N, sd = 1)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
N <- 10000
comp <- rnorm(N, sd = 1)
mkt <- 0.6 * comp + rnorm(N, sd = 1)
visits <- 0.5 * mkt + rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.3) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(N, replace = T)]/100
visits <- 0.5 * mkt + rnorm(N, sd = 1)
comp <- rnorm(N, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(N, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.05) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(2)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
comp <- rnorm(10000, sd = 1)
mkt <- 0.6 * comp + rnorm(10000, sd = 1)
visits <- 0.5 * mkt + rnorm(10000, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(10000, sd = 1)
sim_data <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
model <- lm(sales ~ ., data = sim_data %>% slice(1:8000))
mkt_vals <- seq(min(sim_data$mkt), max(sim_data$mkt), length.out = 10)
dependence <- vector(length = length(mkt_vals))
for(i in seq_along(mkt_vals)){
dependence[i] <- mean(predict(model, newdata = sim_data %>% mutate(mkt = mkt_vals[i])))
}
data.frame(mkt_vals, dependence) %>% ggplot(aes(mkt_vals, dependence)) + geom_line(size = 2) + ggtitle("Partial dependence") + theme(text = element_text(size = 30), plot.title = element_text(hjust = 0.5)) + ylim(min(sim_data$sales), max(sim_data$sales))
actual <- sim_data %>% slice(8001:10000) %>% select(sales) %>% unlist()
predicted <- predict(model, sim_data %>% slice(8001:10000))
R2 <- round(1 - var(predicted - actual)/var(actual), 2)
data.frame(actual, predicted) %>% ggplot(aes(actual, predicted)) + geom_point(alpha = 0.3) + annotate("text", x = quantile(sim_data$mkt, 0.1), y = quantile(sim_data$sales, 0.9), label = paste0("R2 = ", R2), size = 5) + geom_abline(intercept = 0, slope = 1) + theme(text = element_text(size = 20))
mkt <- sim_data$mkt[sample.int(10000, replace = T)]/100
visits <- 0.5 * mkt + rnorm(10000, sd = 1)
comp <- rnorm(10000, sd = 1)
sales <- 0.3 * visits - 0.9 * comp + rnorm(10000, sd = 1)
sim_data2 <- data.frame(mkt, visits, sales, comp) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
bind_rows(sim_data2 %>% mutate(DGP = "do"), sim_data %>% mutate(DGP = "obs")) %>% mutate(DGP = factor(DGP, levels = c("obs", "do"))) %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.05) + theme(text = element_text(size = 30)) + stat_smooth(method = "lm") + facet_grid(~ DGP)
knitr::opts_chunk$set(echo = F, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag" # ggplot DAGs
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
g <- dagitty("dag {
sales [outcome, pos=\"0,0\"]
mkt [exposure, pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales [beta = 0.3]
mkt -> visits [beta = 0.5]
comp -> mkt [beta = 0.6]
comp -> sales [beta = -0.9]
}")
sim_data <- simulateSEM(g, N = 10000) %>%
mutate(
sales = floor((sales - min(sales)) * 100), # make the numbers seem a bit more realistic
mkt = (mkt - min(mkt)) * 100,
comp = comp - min(comp),
visits = floor((visits - min(visits)) * 1000)
) %>%
select(mkt, visits, sales, comp)
pandoc.table(head(sim_data))
sim_data %>% ggplot(aes(mkt, sales)) + geom_point(alpha = 0.2) + theme(text = element_text(size = 30))
model <- lm(sales ~ mkt, data = sim_data)
pandoc.table(coef(model))
model <- lm(sales ~ mkt + visits + comp, data = sim_data)
pandoc.table(coef(model))
ggdag(tidy_dagitty(g)) + theme_dag_blank()
model <- lm(sales ~ mkt + comp, data = sim_data)
pandoc.table(coef(model))
g <- randomDAG(10, 0.35)
tidy_dag <- tidy_dagitty(g)
ggdag(tidy_dag) + theme_dag_blank()
ggdag_adjustment_set(tidy_dag, exposure = "x5", outcome = "x10", type = "minimal") + theme(text = element_text(size = 20))
blogdown::serve_site()
servr::daemon_stop(1)
