a <- get_ate(param_dag_model, treatment = "mkt", treatment_vals = treat_vals, exposure = "sales")
pandoc.table(a)
param_dag_model$f.args$mkt$betas$comp <- 0
sim_data <- sim_mixed_dag(param_dag_model, N = 100000)
sim_data %>% group_by(mkt) %>% summarise(sales = mean(sales)) %>% mutate(sales_diff = sales - lag(sales)) %>% pandoc.table()
a <- get_ate(non_param_dag_model, treatment = "educ", exposure = "vocab", treatment_vals = 0:20, M = 300)
a %>% rename(educ = treatment_value) %>% ggplot(aes(educ, ate)) + geom_line() + geom_hline(yintercept = 0, color = "red")
setwd("simMixedDAG/")
roxygen2::roxygenise()
setwd("../")
install.packages("simMixedDAG", repos = NULL, types = "source")
install.packages("simMixedDAG", repos = NULL, type = "source")
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG"
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
g <- dagitty("dag {
sales [pos=\"0,0\"]
mkt [pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales
mkt -> visits
comp -> mkt
comp -> sales
}")
ggdag(tidy_dagitty(g)) + theme_dag_blank()
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g)
sim_data <- sim_mixed_dag(param_dag_model, N = 500)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth(method = "lm")
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2))))
sim_data <- sim_mixed_dag(param_dag_model, N = 500)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth(method = "lm")
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), sinr = 5),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth(method = "lm")
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), link = "cosin", sinr = 3),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth()
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), link = "quadratic", sinr = 3),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
p1 <- sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth() + ggtitle("Quadratic") + theme(plot.title = element_text(hjust = 0.5))
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), link = "exp", sinr = 3),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
p2 <- sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth() + ggtitle("Exponent") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1, p2, nrow = 1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2),
link = "quadratic", sinr = 3, levels = 3, labels = c("low", "medium", "high")), mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(sales, comp)) + geom_boxplot() + stat_smooth()
g_unconfounded <- dagitty("dag {
sales [pos=\"0,0\"]
mkt [pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales
mkt -> visits
comp -> sales
}")
ggdag(tidy_dagitty(g_unconfounded)) + theme_dag_blank()
param_dag_model <- parametric_dag_model(dag = g_unconfounded, f.args = list(sales = list(betas = list(visits = 0.3, comp = -0.9)),
visits = list(betas = list(mkt = 0.5)))) # note here we set the comp to mkt coefficient to 0
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(mkt, sales)) + geom_point() + stat_smooth(method = "lm")
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(visits = 0.3, comp = -0.9)),
visits = list(betas = list(mkt = 0.5)),
mkt = list(betas = list(comp = 0.6)))) # note the comp to mkt coefficient is as in the original probelm setup
a <- get_ate(param_dag_model, treatment = "mkt", treatment_vals = -2:2, exposure = "sales")
tail(1:3, -1)
tail(1:3, 1)
head(1:3, -1)
?lm
setwd("simMixedDAG/")
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages("simMixedDAG")
install.packages("")
setwd("../")
install.packages("simMixedDAG/", repos = NULL, type = "source")
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG"
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
g <- dagitty("dag {
sales [pos=\"0,0\"]
mkt [pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales
mkt -> visits
comp -> mkt
comp -> sales
}")
ggdag(tidy_dagitty(g)) + theme_dag_blank()
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"gridExtra", # arranging several ggplots together
"simMixedDAG"
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG"
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
g <- dagitty("dag {
sales [pos=\"0,0\"]
mkt [pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales
mkt -> visits
comp -> mkt
comp -> sales
}")
ggdag(tidy_dagitty(g)) + theme_dag_blank()
setwd("simMixedDAG/")
roxygen2::roxygenise()
setwd("../")
install.packages("simMixedDAG", repos = NULL, type = "source")
library(simMixedDAG)
library(tidyverse)
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG"
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
library(carData)
data("GSSvocab")
GSSvocab <- GSSvocab %>% filter(complete.cases(.))
g <- dagitty("dag {
ageGroup [pos=\"0,0\"]
vocab [pos=\"1,-1\"]
nativeBorn [pos=\"2,-2\"]
educ [pos=\"3,-1\"]
gender [pos=\"4,0\"]
nativeBorn -> educ
nativeBorn -> vocab
educ -> vocab
gender -> educ
ageGroup -> vocab
}")
tidy_dag <- tidy_dagitty(g)
tidy_dag$data$xend[1] <- 0.92; tidy_dag$data$yend[1] <- -0.96
tidy_dag$data$xend[2] <- 1.09
tidy_dag$data$xend[3] <- 3.08; tidy_dag$data$yend[3] <- -0.96
tidy_dag$data$xend[4] <- 2.92; tidy_dag$data$yend[4] <- -1.04
tidy_dag$data$xend[5] <- 1.07; tidy_dag$data$yend[5] <- -1.04
ggdag(tidy_dag, node_size = 28) + theme_dag_blank()
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
remove.packages("simMixedDAG")
library(simMixedDAG)
?sim_mixed_dag.parametric_dag_model
remove.packages("simMixedDAG")
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG", # simulate mixed data types datasets from DAG
)
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG" # simulate mixed data types datasets from DAG
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
library(carData)
data("GSSvocab")
GSSvocab <- GSSvocab %>% filter(complete.cases(.))
g <- dagitty("dag {
ageGroup [pos=\"0,0\"]
vocab [pos=\"1,-1\"]
nativeBorn [pos=\"2,-2\"]
educ [pos=\"3,-1\"]
gender [pos=\"4,0\"]
nativeBorn -> educ
nativeBorn -> vocab
educ -> vocab
gender -> educ
ageGroup -> vocab
}")
tidy_dag <- tidy_dagitty(g)
tidy_dag$data$xend[1] <- 0.92; tidy_dag$data$yend[1] <- -0.96
tidy_dag$data$xend[2] <- 1.09
tidy_dag$data$xend[3] <- 3.08; tidy_dag$data$yend[3] <- -0.96
tidy_dag$data$xend[4] <- 2.92; tidy_dag$data$yend[4] <- -1.04
tidy_dag$data$xend[5] <- 1.07; tidy_dag$data$yend[5] <- -1.04
ggdag(tidy_dag, node_size = 28) + theme_dag_blank()
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
sim_data <- sim_mixed_dag(non_param_dag_model, N = 30000)
bind_rows(GSSvocab %>% mutate(data = "Original"), sim_data %>% mutate(data = "Simulated")) %>%
ggplot(aes(nativeBorn, vocab)) + geom_boxplot() + facet_wrap(~data)
bind_rows(GSSvocab %>% mutate(data = "Original"), sim_data %>% mutate(data = "Simulated")) %>%
ggplot(aes(educ, vocab)) + geom_point(alpha = 0.02) + facet_wrap(~data) + stat_smooth()
bind_rows(GSSvocab %>% mutate(data = "Original"), sim_data %>% mutate(data = "Simulated")) %>%
ggplot(aes(educ)) + geom_histogram() + facet_wrap(~data)
GSSvocab %>% group_by(nativeBorn, gender) %>% summarise(freq = n()/nrow(.)) %>% spread(key = gender, value = freq) %>% pandoc.table(caption = "Original data")
sim_data %>% group_by(nativeBorn, gender) %>% summarise(freq = n()/nrow(.)) %>% spread(key = gender, value = freq) %>% pandoc.table(caption = "Simulated data")
g <- dagitty("dag {
sales [pos=\"0,0\"]
mkt [pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales
mkt -> visits
comp -> mkt
comp -> sales
}")
ggdag(tidy_dagitty(g)) + theme_dag_blank()
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g)
sim_data <- sim_mixed_dag(param_dag_model, N = 500)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth(method = "lm")
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2))))
sim_data <- sim_mixed_dag(param_dag_model, N = 500)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth(method = "lm")
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), sinr = 5),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth(method = "lm")
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), link = "cosin", sinr = 3),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth()
set.seed(1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), link = "quadratic", sinr = 3),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
p1 <- sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth() + ggtitle("Quadratic") + theme(plot.title = element_text(hjust = 0.5))
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2), link = "exp", sinr = 3),
mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
p2 <- sim_data %>% ggplot(aes(comp, sales)) + geom_point() + stat_smooth() + ggtitle("Exponent") + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1, p2, nrow = 1)
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(comp = -2),
link = "quadratic", sinr = 3, levels = 3, labels = c("low", "medium", "high")), mkt = list(betas = list(comp = 0))))
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(sales, comp)) + geom_boxplot() + stat_smooth()
g_unconfounded <- dagitty("dag {
sales [pos=\"0,0\"]
mkt [pos=\"2,0\"]
comp [pos=\"1,1\"]
visits [pos=\"1,0\"]
visits -> sales
mkt -> visits
comp -> sales
}")
ggdag(tidy_dagitty(g_unconfounded)) + theme_dag_blank()
param_dag_model <- parametric_dag_model(dag = g_unconfounded, f.args = list(sales = list(betas = list(visits = 0.3, comp = -0.9)),
visits = list(betas = list(mkt = 0.5)))) # note here we set the comp to mkt coefficient to 0
sim_data <- sim_mixed_dag(param_dag_model)
sim_data %>% ggplot(aes(mkt, sales)) + geom_point() + stat_smooth(method = "lm")
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(visits = 0.3, comp = -0.9)),
visits = list(betas = list(mkt = 0.5)),
mkt = list(betas = list(comp = 0.6)))) # note the comp to mkt coefficient is as in the original probelm setup
a <- get_ate(param_dag_model, treatment = "mkt", treatment_vals = -2:2, exposure = "sales")
pandoc.table(a, caption = "mkt ATE on sales")
param_dag_model <- parametric_dag_model(dag = g, f.args = list(visits = list(betas = list(mkt = c(0.5, 1.2)), levels = 1),
sales = list(betas = list(visits = 1.5, comp = -4), link = "quadratic"),
mkt = list(betas = list(comp = 2), levels = 3, labels = c("low", "medium", "high"),
link = "exp", sinr = 8)))
treat_vals <- factor(c("low", "medium", "high"), levels = c("low", "medium", "high"))
a <- get_ate(param_dag_model, treatment = "mkt", treatment_vals = treat_vals, exposure = "sales")
pandoc.table(a)
param_dag_model$f.args$mkt$betas$comp <- 0
sim_data <- sim_mixed_dag(param_dag_model, N = 100000)
sim_data %>% group_by(mkt) %>% summarise(sales = mean(sales)) %>% mutate(sales_diff = sales - lag(sales)) %>% pandoc.table()
a <- get_ate(non_param_dag_model, treatment = "educ", exposure = "vocab", treatment_vals = 0:20, M = 300)
a %>% rename(educ = from) %>% ggplot(aes(educ, ate)) + geom_line() + geom_hline(yintercept = 0, color = "red")
param_dag_model <- parametric_dag_model(dag = g, f.args = list(sales = list(betas = list(visits = 0.3, comp = -0.9)),
visits = list(betas = list(mkt = 0.5)),
mkt = list(betas = list(comp = 0.6)))) # note the comp to mkt coefficient is as in the original probelm setup
a <- get_ate(param_dag_model, treatment = "mkt", treatment_vals = -2:2, exposure = "sales")
pandoc.table(a, caption = "mkt ATE on sales")
param_dag_model$f.args$mkt$betas$comp <- 0
sim_data <- sim_mixed_dag(param_dag_model, N = 1000000)
sim_data %>% group_by(mkt) %>% summarise(sales = mean(sales)) %>% mutate(sales_diff = sales - lag(sales)) %>% pandoc.table()
set.seed(1)
param_dag_model$f.args$mkt$betas$comp <- 0
sim_data <- sim_mixed_dag(param_dag_model, N = 100000)
sim_data %>% group_by(mkt) %>% summarise(sales = mean(sales)) %>% mutate(sales_diff = sales - lag(sales)) %>% pandoc.table()
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG", # simulate mixed data types datasets from DAG
"carData" #GSSvocab dataset
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
data("GSSvocab")
GSSvocab <- GSSvocab %>% filter(complete.cases(.))
g <- dagitty("dag {
ageGroup [pos=\"0,0\"]
vocab [pos=\"1,-1\"]
nativeBorn [pos=\"2,-2\"]
educ [pos=\"3,-1\"]
gender [pos=\"4,0\"]
nativeBorn -> educ
nativeBorn -> vocab
educ -> vocab
gender -> educ
ageGroup -> vocab
}")
tidy_dag <- tidy_dagitty(g)
tidy_dag$data$xend[1] <- 0.92; tidy_dag$data$yend[1] <- -0.96
tidy_dag$data$xend[2] <- 1.09
tidy_dag$data$xend[3] <- 3.08; tidy_dag$data$yend[3] <- -0.96
tidy_dag$data$xend[4] <- 2.92; tidy_dag$data$yend[4] <- -1.04
tidy_dag$data$xend[5] <- 1.07; tidy_dag$data$yend[5] <- -1.04
ggdag(tidy_dag, node_size = 28) + theme_dag_blank()
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
sim_data <- sim_mixed_dag(non_param_dag_model, N = 30000)
View(sim_mixed_dag)
View(sim_mixed_dag.non_parametric_dag_model)
source("../../simMixedDAG/R/sim_mixed_dag.non_parametric_dag_model.R")
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
"simMixedDAG", # simulate mixed data types datasets from DAG
"carData" #GSSvocab dataset
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
source("../../simMixedDAG/R/sim_mixed_dag.non_parametric_dag_model.R")
data("GSSvocab")
GSSvocab <- GSSvocab %>% filter(complete.cases(.))
g <- dagitty("dag {
ageGroup [pos=\"0,0\"]
vocab [pos=\"1,-1\"]
nativeBorn [pos=\"2,-2\"]
educ [pos=\"3,-1\"]
gender [pos=\"4,0\"]
nativeBorn -> educ
nativeBorn -> vocab
educ -> vocab
gender -> educ
ageGroup -> vocab
}")
tidy_dag <- tidy_dagitty(g)
tidy_dag$data$xend[1] <- 0.92; tidy_dag$data$yend[1] <- -0.96
tidy_dag$data$xend[2] <- 1.09
tidy_dag$data$xend[3] <- 3.08; tidy_dag$data$yend[3] <- -0.96
tidy_dag$data$xend[4] <- 2.92; tidy_dag$data$yend[4] <- -1.04
tidy_dag$data$xend[5] <- 1.07; tidy_dag$data$yend[5] <- -1.04
ggdag(tidy_dag, node_size = 28) + theme_dag_blank()
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
sim_data <- sim_mixed_dag(non_param_dag_model, N = 30000)
View(sim_mixed_dag.non_parametric_dag_model)
debugSource('~/Documents/my folder/Iyar projects/simMixedDAG/R/sim_mixed_dag.non_parametric_dag_model.R')
debugSource('~/Documents/my folder/Iyar projects/simMixedDAG/R/sim_mixed_dag.non_parametric_dag_model.R')
library(simMixedDAG)
?source
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
# "simMixedDAG", # simulate mixed data types datasets from DAG
"carData" #GSSvocab dataset
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
data("GSSvocab")
GSSvocab <- GSSvocab %>% filter(complete.cases(.))
g <- dagitty("dag {
ageGroup [pos=\"0,0\"]
vocab [pos=\"1,-1\"]
nativeBorn [pos=\"2,-2\"]
educ [pos=\"3,-1\"]
gender [pos=\"4,0\"]
nativeBorn -> educ
nativeBorn -> vocab
educ -> vocab
gender -> educ
ageGroup -> vocab
}")
tidy_dag <- tidy_dagitty(g)
tidy_dag$data$xend[1] <- 0.92; tidy_dag$data$yend[1] <- -0.96
tidy_dag$data$xend[2] <- 1.09
tidy_dag$data$xend[3] <- 3.08; tidy_dag$data$yend[3] <- -0.96
tidy_dag$data$xend[4] <- 2.92; tidy_dag$data$yend[4] <- -1.04
tidy_dag$data$xend[5] <- 1.07; tidy_dag$data$yend[5] <- -1.04
ggdag(tidy_dag, node_size = 28) + theme_dag_blank()
list.files("../../simMixedDAG/R/", path = T)
lapply(list.files("../../simMixedDAG/R/", full.names = T), source)
lapply(list.files("../../simMixedDAG/R/", full.names = T), source)
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
library(gam)
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
library(mgcv)
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
debugSource('~/Documents/my folder/Iyar projects/simMixedDAG/R/non_parametric_dag_model.R')
remove.packages("simMixedDAG")
knitr::opts_chunk$set(echo = T, warning = F, message = F, cache = F)
set.seed(1)
options(scipen = 999)
packages <- c(
"tidyverse", # best thing that ever happend to me
"pander", # table rendering
"dagitty", # Create DAGs
"ggdag", # ggplot DAGs
"gridExtra", # arranging several ggplots together
# "simMixedDAG", # simulate mixed data types datasets from DAG
"carData" #GSSvocab dataset
)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(char = packages)
data("GSSvocab")
GSSvocab <- GSSvocab %>% filter(complete.cases(.))
g <- dagitty("dag {
ageGroup [pos=\"0,0\"]
vocab [pos=\"1,-1\"]
nativeBorn [pos=\"2,-2\"]
educ [pos=\"3,-1\"]
gender [pos=\"4,0\"]
nativeBorn -> educ
nativeBorn -> vocab
educ -> vocab
gender -> educ
ageGroup -> vocab
}")
tidy_dag <- tidy_dagitty(g)
tidy_dag$data$xend[1] <- 0.92; tidy_dag$data$yend[1] <- -0.96
tidy_dag$data$xend[2] <- 1.09
tidy_dag$data$xend[3] <- 3.08; tidy_dag$data$yend[3] <- -0.96
tidy_dag$data$xend[4] <- 2.92; tidy_dag$data$yend[4] <- -1.04
tidy_dag$data$xend[5] <- 1.07; tidy_dag$data$yend[5] <- -1.04
ggdag(tidy_dag, node_size = 28) + theme_dag_blank()
lapply(list.files("../../simMixedDAG/R/", full.names = T), source)
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
lapply(list.files("../../../simMixedDAG/R/", full.names = T), source)
library(mgcv); library(gam)
non_param_dag_model <- non_parametric_dag_model(dag = g, data = GSSvocab)
